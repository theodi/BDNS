[
  {
    "objectID": "BDNS_Governance_model.html",
    "href": "BDNS_Governance_model.html",
    "title": "Building Device and Asset Naming Standards initiative",
    "section": "",
    "text": "Status: release 2.1.0-rc1"
  },
  {
    "objectID": "BDNS_Governance_model.html#background",
    "href": "BDNS_Governance_model.html#background",
    "title": "Building Device and Asset Naming Standards initiative",
    "section": "Background",
    "text": "Background\nThis document provides an overview of governance and processes used in the initiative to create a standard for device and assets naming and labeling in the built environment. This initiative was started in late 2019 by a number of organisations working on or with data and/or built environment systems, with an ambition to create an open standard for Building Device Naming.\nThis document is intended to be a useful reference point for anyone involved in contributing to the open standard(s) being developed."
  },
  {
    "objectID": "BDNS_Governance_model.html#scope",
    "href": "BDNS_Governance_model.html#scope",
    "title": "Building Device and Asset Naming Standards initiative",
    "section": "Scope",
    "text": "Scope\nBuilding devices and assets in scope for this work are Mechanical, Electrical, Public Health (MEP) devices (known as Operational Technologies - OT) and Information Technology (IT).\nThis standard is developed to align and complement other initiatives in the industry such as Brick Schema, Haystack, Omniclass, Uniclass, IFC etc. In scope for this work are:\n\nA specification for the naming syntax\nA register of building device and asset type abbreviations"
  },
  {
    "objectID": "BDNS_Governance_model.html#governance-and-platforms",
    "href": "BDNS_Governance_model.html#governance-and-platforms",
    "title": "Building Device and Asset Naming Standards initiative",
    "section": "Governance and platforms",
    "text": "Governance and platforms\nDevelopment and future maintenance of the naming and labelling standard for building devices will rely on technical platforms.\nThe used platforms are:\n\nGitHub for hosting of the specifications and related documentation, issue tracking and resolution;\na W3C Community group for mailing-lists and other collaboration tools.\n\nThe platforms provide mechanisms to raise, discuss and resolve issues. They are however agnostic on the decision process used to resolve issues, deal with disagreement, or appoint key roles. This document describes the associated governance."
  },
  {
    "objectID": "BDNS_Governance_model.html#our-governance-principles",
    "href": "BDNS_Governance_model.html#our-governance-principles",
    "title": "Building Device and Asset Naming Standards initiative",
    "section": "Our governance principles",
    "text": "Our governance principles\nAs a group we are committed to the OpenStand principles. These are five principles that guide our work:\n\nDue process. Decisions are made with equity and fairness among participants. No one party dominates or guides standards development. Standards processes are transparent and opportunities exist to appeal decisions. Processes for periodic standards review and updating are well defined.\nBroad consensus. Processes allow for all views to be considered and addressed, such that agreement can be found across a range of interests.\nTransparency. Standards organizations provide advance public notice of proposed standards development activities, the scope of work to be undertaken, and conditions for participation. Easily accessible records of decisions and the materials used in reaching those decisions are provided. Public comment periods are provided before final standards approval and adoption.\nBalance. Standards activities are not exclusively dominated by any particular person, company or interest group.\nOpenness. Standards processes are open to all interested and informed parties.\n\nWe are working to improve our process to ensure that we are living up to these principles. This document provides a reference point for our current practices."
  },
  {
    "objectID": "BDNS_Governance_model.html#intellectual-property",
    "href": "BDNS_Governance_model.html#intellectual-property",
    "title": "Building Device and Asset Naming Standards initiative",
    "section": "Intellectual property",
    "text": "Intellectual property\nAll the outputs from this standards initiative are openly licensed.\nThe formal specifications created within the W3C community group are published under the W3C software and document notice and license. It gives permission for you to reuse the work, including implementing the specifications for free, for any purpose.\nAdditional documentation and source code produced by this initiative will also be published under an open licence, e.g. the Creative Commons Attribution Licence, or the MIT licence. We encourage other organisations to similarly licence their work, so that it can be used for the benefit of the wider community.\nIndividual contributions to the work of the group are covered by the contributor agreement. This gives the group permission to use individual contributions (e.g. suggested text, contributions to test suites) and publish them under an open licence."
  },
  {
    "objectID": "BDNS_Governance_model.html#roles-and-responsibilities",
    "href": "BDNS_Governance_model.html#roles-and-responsibilities",
    "title": "Building Device and Asset Naming Standards initiative",
    "section": "Roles and responsibilities",
    "text": "Roles and responsibilities\n\nThe Community Group\nA W3C community group provides a neutral location for organisations working across different sectors to collaborate on openly licensed specifications.\nThe W3C provide the group with a homepage, a means to publish specifications, and some collaboration tools (e.g. our mailing list). This provides the group with a stable presence on the web, even though the membership of the group might change over time.\nThe active organisations participating in the Community Group are:\n\nArup\nBritish Land\nBuildingsIOT\nFPC\nGoogle\nLloret\nMax Fordham LLP\n\n\n\nChair(s)\nThe community group is currently chaired by Sotiria Lavasa (Arup), having been nominated by the members of the Community Group in March 2020. In the future members from other community group organisations may take on responsibility for chairing and managing the group. The Community Group shall (at the end of each calendar year) review whether the nominated chair continues in term for another year.\nIt is the responsibility of the Chair to ensure that we are following our governance principles. For example, ensuring that we have developed broad consensus around planned changes, are being transparent around decision making, and are working in the open.\n\n\nEditor(s)\nThe role of the editor(s) is to document decisions and write the specifications for the standard, in line with the decisions. It also includes sharing drafts and changes and gathering feedback from the community.\nEditors appointments are suggested by the chairs, and the decision to appoint follows the group’s usual process for consensus.\nCurrent editor(s) for the group is/are:\n\nFrancesco Anselmo (@pisuke) – Arup – Register and Syntax\nRichard Reid (@richardkreid) – Google – Register and Syntax\nOlivier Thereaux (@olivierthereaux) - ODI - Governance document\n\n\n\nCommunity Group members\nAnyone can join the community group. Everyone who joins the group signs a contributor agreement. The contributor agreement is part of our commitment to working in the open. It helps to ensure that the work we create can be freely used by anyone for any purpose. All of our outputs are published under an open licence.\nContributions from the group are voluntary. However we ask that all members think about how they can contribute, including:\n\nwhere possible, attending meetings to provide feedback on current plans\nproviding feedback on working documents, and reviewing and voting on issues to help us progress our work\nadopting our standards in your projects and platforms\nprovide implementation feedback that can help us plan and prioritise new work\npromoting our activities to a wider community to help us create impact\n\nTo support members we provide a number of ways to engage with our work. These are outlined below.\n\n\nOther roles\nOther roles, such as test manager, etc. may be appointed at certain phases of the lifecycle of the standard. A number of those roles and their typical responsibilities are listed in the Open Standards for Data guidebook.\nAppointment of those roles among Community Group members are suggested by the chairs, and the decision to appoint follows the group’s usual process for consensus."
  },
  {
    "objectID": "BDNS_Governance_model.html#how-we-collaborate",
    "href": "BDNS_Governance_model.html#how-we-collaborate",
    "title": "Building Device and Asset Naming Standards initiative",
    "section": "How we collaborate",
    "text": "How we collaborate\nWe aim to be respectful of people’s time and so provide multiple ways to monitor progress and engage with the work of the group.\nWe aim to use collaboration tools that will enable people to usefully participate in discussions and to help move our work forward.\nCurrently we use the following:\n\nMailing lists. The community group has a two mailing-lists: an internal mailing-list used for logistics of the group, and a publicly available and archived mailing list which anyone can subscribe to. We use this list for key announcements and co-ordinating events.\nRegular teleconference. Active members of the community group meet frequently (currently: weekly) to discuss progress on the documents and issues. Decisions made during the meeting will be documented in Github issues or commit messages, and may also be posted on the public mailing-list. We also hold quarterly open video calls to provide updates on progress and to help discuss key issues. Dates and logistics of the next call, as well as notes or minutes of previous calls, will be posted on the public mailing-list.\nGitHub. We use GitHub to manage our working documents and as an issue tracker. The issue tracker for each specification is clearly linked at the top of the document.\nGoogle Documents. We occasionally use google documents to help to collaborate on additional best practice guidance or documentation. Documents are always made openly available for anyone to view and/or comment. Documents are shared via the mailing list.\nBlog. For key milestones we publish short blog posts on the W3C Community Group blog.\n\nOver time we may use additional tools and website to help publish additional tutorials and other supporting documentation."
  },
  {
    "objectID": "BDNS_Governance_model.html#managing-change-and-building-consensus",
    "href": "BDNS_Governance_model.html#managing-change-and-building-consensus",
    "title": "Building Device and Asset Naming Standards initiative",
    "section": "Managing change and building consensus",
    "text": "Managing change and building consensus\n\nVersioning of documents\nThe group expects to produce and maintain two types of standards:\n\nA simple syntax specification\nA register of building device names\n\nThe former specification goes through the following stages:\n\nEditors Draft. Working versions of the specifications that are under discussion and review by the community group. These drafts are subject to change.\nCandidate Specification. Current stable version of our specifications, incorporating the latest agreed changes. These versions are considered stable enough for production implementation. Candidate Specifications will be point releases, e.g. 1.1, 1.2, 1.3 version of a specification.\nFinal Specification. A major revision of our specifications. These are clearly linked as “Final Reports” from the community group homepage.\n\nCandidate and Final Specifications are clearly versioned. To allow for referencing of earlier versions, we will provide links to previous versions of a specification.\nEditors will be in charge of managing the evolution of the specification according to our process for building consensus.\nFor the register of building device names, there are:\n\nA live list reflecting at any point the latest state of the list as maintained by the Editors.\nStable snapshots of the list with clear version names will be created on a regular basis (aiming to be at least once a year) to provide a stable basis for implementation. Snapshots will only include names for which no open issue is currently open.\n\nIn the interest of speed and flexibility, Editors will be following the simplified submission process when adding new entries to the register.\n\n\nOur process for building consensus\nOur process for making changes to our specifications and building consensus within the community is as follows:\n\npropose and discuss new work areas in our regular calls, e.g. plans for tackling major new work areas\nraise issues on Github to outline proposed changes in more detail:\nencourage discussion and feedback on those issues by requesting that people leave comments on Github.\nin addition we also review and discuss issues in our regular calls and collate these comments, updating the relevant issues\nonce we have a clear proposal with support from the community (see process, below), the specification editor will create a new Editors Draft of the relevant specification, including the proposed changes.\nnew and updated Editors Drafts will be circulated to the community group via the mailing list, with a summary of changes\nonce we feel that a broad consensus has been achieved around the proposed changes, we will publish a new Candidate Specification\nprior to the annual point release of a specification we will issue a request for any major issues or concerns prior to the publication of the Final Specification.\n\nWhere we have proposed changes to release, we will aim to publish new Candidate Specifications every two months.\nThis process provides for multiple points of feedback and communication, giving everyone an opportunity to :\n\ndiscussion during our regular calls\ncomments on proposed changes or amendment on individual github issues\ncall for feedback on new and updated Editors Drafts\nannual call for feedback prior to a major release\n\nWe will aim to do quarterly release updates to the abbreviations register.\n\n\nProposing specification changes\nAnyone can propose changes to our specifications. The process is to:\n\nFile a proposal by submitting an issue to the relevant GitHub repository for the specification.\nShare your proposal with the community by posting to the community group mailing list\nWork with others, including the specification editor, to respond to any feedback, including making any necessary revisions to the proposal\nWork with the specification editor to make sure that proposal is incorporated in draft\n\nTo help guide decision making we suggest that editors should look for the following as signs that a proposal has the necessary support from the community:\n\nthe backing of both a publisher and a consumer of the data (or API), to be named in the github issue\nat least three positive votes (on the relevant github issue or issues) from community group members\n\nIt is the responsibility of both the person submitting a proposal and the specification editor to ensure that the proposed changes fit within the design principles and scope of the specification.\n\n\nSubmission process for building device names\nAnyone can submit a new name to the register. The process for submission is as follows:\n\nA submission can be made through one of several technical means:\n\nAdditions to the register can be proposed by submitting a “pull request” to the Github repository.\nAlternative submission mechanisms (e.g. through a mail address) may be made available if the Github PR mechanisms are deemed too technical.\n\nA notification of the submission is made available to the Community Group\nIf there are no objections from members of the Community Group or Editors, the editors will either integrate the submission or suggest an alternative to the submitter within two weeks.\nIf there are objections from members of the Community Group or Editors, the issue is escalated to the attention of the Community Group and its Chair(s), and the normal consensus building process applies.\n\nAny change to the register of names will follow the process for proposing specification changes and the consensus building rules."
  },
  {
    "objectID": "BDNS_Governance_model.html#funding",
    "href": "BDNS_Governance_model.html#funding",
    "title": "Building Device and Asset Naming Standards initiative",
    "section": "Funding",
    "text": "Funding\nThe ODI’s contribution during Phase 1 (2019/2020) of the project was funded through the Arup-ODI Partnership agreement.\nArup, Buildings IoT and FPC worked in 2020 and 2021 as part of agreed Statement of Works funded by Google to undertake the following:\n\nFacilitate the adoption of a Google internal list of abbreviations into BDNS.\nReview, updating and addition of Google project related abbreviations."
  },
  {
    "objectID": "release.html",
    "href": "release.html",
    "title": "",
    "section": "",
    "text": "Status: release 2.1.0-rc1"
  },
  {
    "objectID": "BDNS_Specification_naming_syntax.html",
    "href": "BDNS_Specification_naming_syntax.html",
    "title": "Building Device and Asset Naming Standards initiative",
    "section": "",
    "text": "Status: release 2.1.0-rc1"
  },
  {
    "objectID": "BDNS_Specification_naming_syntax.html#purpose-and-scope",
    "href": "BDNS_Specification_naming_syntax.html#purpose-and-scope",
    "title": "Building Device and Asset Naming Standards initiative",
    "section": "Purpose and scope",
    "text": "Purpose and scope\nA consistent approach to naming of assets, devices and building control system control points is fundamental to:\n\nAchieve consistent identification and data management of devices and assets through the life of a building.\nEnable the deployment of digital buildings and their applications.\nTake advantage of machine learning and artificial intelligence.\n\nThe purpose of this document is to indicate the process to be followed for building projects to name and label assets and devices.\nThe following definitions apply:\n\nDevice/Asset Role: a specific function in a building that is fulfilled by a device. A device role remains fixed for the function even if the hardware is replaced.\nDevice/Asset Instance: a specific individual piece of hardware. If the hardware is replaced for a particular device role, the device instance changes.\nMachine Generated/Readable Device/Asset Instance Globally Unique Identifier (Device/Asset Instance GUID): a sequence of digits which is machine generated, is immutable and guaranteed to be globally unique among all identifiers used for the purpose of identification of devices within the digital building system. This type of information can be generated by the manufacturer, BIM or asset management software and is unique to the device instance. If a device is replaced, its Device Instance GUID will change. This type of information _is in the scope of this document.\nHuman Readable Device/Asset Type: a type of device that has been selected to achieve a specific function. A device type remains fixed (provided direct replacement) if the hardware is replaced. (This is an optional field).\nHuman Readable Device/Asset Role Name (Device/Asset Role Name): an alphanumeric sequence that is selected by a human operator according to a global standard that guarantees correlation to building devices categories and uniqueness within the building for a device role. The device role human readable name will remain unchanged when specific hardware fulfilling the role is changed. This type of information _is in the scope of this document.\nPhysical Label: a physical piece of material affixed to a building control device including the printed name of the device and additional information in the form of QR code, NFC tag or other data encoding technologies. This type of information _is in the scope of this document.\nNetwork Hostname: the hostname is a sequence of characters assigned to a device (a host) on a network. A hostname should uniquely identify a single device role on the network at a given point in time. This type of information _is not in the scope of this document.\nControl point name: the name of each attribute of a device, such as a sensor value or a set point value. This type of information _is not in the scope of this document.\nMetadata: data associated with a device that provide information about its attributes. This type of information _is not in the scope of this document."
  },
  {
    "objectID": "BDNS_Specification_naming_syntax.html#specification-clause-example",
    "href": "BDNS_Specification_naming_syntax.html#specification-clause-example",
    "title": "Building Device and Asset Naming Standards initiative",
    "section": "Specification clause example",
    "text": "Specification clause example\nThe following specification clause is provided so that BDNS naming can be included in projects:\nThe convention for building control device naming shall/must follow the Building Device Naming Standard (BDNS) during the project design and construction stages.\nFor a physical device i.e. FCU, CAV etc. the naming conventions for creating these names shall/must be taken from the following links:\n\nhttps://github.com/theodi/BDNS/blob/master/BDNS_Specification_naming_syntax.md\nhttps://github.com/theodi/BDNS/blob/master/BDNS_Abbreviations_Register.csv"
  },
  {
    "objectID": "BDNS_Specification_naming_syntax.html#deviceasset-instance-identification-and-naming",
    "href": "BDNS_Specification_naming_syntax.html#deviceasset-instance-identification-and-naming",
    "title": "Building Device and Asset Naming Standards initiative",
    "section": "Device/Asset instance identification and naming",
    "text": "Device/Asset instance identification and naming\nEach device or asset will be assigned as a minimum, the following attributes:\n\nA Device/Asset Instance Global Unique Identifier (GUID)\nA Device/Asset Role Name\n\nThe structure and purpose of these attributes is described in the subsequent sections.\nWhere a device or asset is represented in control system software then it shall be named in accordance with this naming standard within the control system software, e.g. a controller or an inverter must be named.\nWherever possible, the naming shall be applied as close to the edge as possible, i.e. within the device itself rather than at a gateway device, e.g. an M-Bus meter may not be able to adopt the naming within the meters software itself due to the simplicity of the M-Bus protocol, meaning that a mapping would be required between the meter’s software identifier and the naming convention at a gateway."
  },
  {
    "objectID": "BDNS_Specification_naming_syntax.html#deviceasset-type-identification-and-naming",
    "href": "BDNS_Specification_naming_syntax.html#deviceasset-type-identification-and-naming",
    "title": "Building Device and Asset Naming Standards initiative",
    "section": "Device/Asset type identification and naming",
    "text": "Device/Asset type identification and naming\nDuring early stages of design, or for generic components (/ BIM objects) where can_be_connected = False, and there are many instances in the BIM model that do not need individual identification (e.g. cables, data cables, pipework, ductwork, …); it may be appropriate to give only a type identification of the object. In these scenarios refer to the asset type naming guidance only.\n\nDevice/Asset instance GUID (asset.guid)\nAll devices or assets shall have a unique identifier. Once generated, this shall not be changed at any point for a specific device or asset instance.\n\nDefinition\nThe device/asset instance globally unique identifier (GUID) is a machine generated and machine readable unique identifier. It is an auto-generated 128-bit number, which can be encoded using the modalities of the RFC 4122 standard or as an IFC GlobalId object of type ifcGloballyUniqueId.\n\n\nReference standards\nRFC 4122\nIndustry Foundation Classes\n\n\nOriginator\nGenerated by a BIM operator, design team, project team, manufacturer or facilities team, depending on the project stage.\nIn projects which are utilising BIM, this would be generated by the software without human intervention and shall be converted to the latest Industry Foundation Classes encoding.\nFor new projects which do not utilise BIM or for application to existing projects this can be generated using one of several freely available GUID tools (e.g. https://www.guidgenerator.com/).\nAlternatively, a unique identifier may be provided by the manufacturer and input to a project master database such as the BIM model.\n\n\nFormat\nAuto-generated 128-bit integer number.\nIf generated from BIM processes, the GUID is represented by 22 IFC base 64 characters encoding.\nIf generated by GUID tools, the GUID is usually represented by a 32 digits hexadecimal integer number.\nFlexibility of format is to allow for multiple workflows, for example some projects may choose to automatically generate a GUID using BIM software.\n\n\nExamples\n58e6591f-0cef-4bb1-ac9c-6ef03ec58111(32 digits hexadecimal integer)\n04aEp5ymD_$u5IxhJN2aGi(IFC base 64 format)\n\n\nValidation tests\nFor BIM workflows, the validation procedure shall include the following tests:\n\nRegular expression matching to validate the ID format and avoid non-base641 characters and longer or shorter lengths than 22 characters\nUniqueness of the ID across all device instances\n\n\nRegular expression matching\n([0-9a-fA-F]){8}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){12}(32 digits hexadecimal integer)\n[A-Za-z0-9_$]{22}(IFC base 64 format)\n\n\n\n\nDevice/Asset type (asset.type)\n\nDefinition\nThe device or asset type is a human-generated identifier that is unique for a type of assets to the building. It combines a standard abbreviation for device/asset types and a numerical ID that is unique to each specific device/asset type.\n\n\nOriginator\nGenerated by the BIM operator, design team, project team or facilities team, depending on project stage.\n\n\nFormat\n&lt;X&gt;&lt;Z&gt;\nwhere:\nX=  (alphabetic characters only, variable length, between 2 and 6 characters)\nZ=  (variable length, optional unique integer numbers by asset type in each building, non zero padded)\nThe type abbreviation shall be according to the Building Device and Asset Abbreviation Registry.\nThe format is composed of a 2 to 6 uppercase alphabetical characters long type abbreviation according to the name abbreviation (X) and a variable length character numeric sequence that is unique to the building (Z) for each asset type. No leading zeros are allowed in the asset type incremental number to avoid ambiguity.\nOnly uppercase alphabetic characters and numeric characters are allowed, according to the regular expression below. There is no separator character between the type abbreviation and the incremental number for the asset.type.\nIf there is only one asset type per abbreviation, the asset type incremental number can be omitted.\n\n\nExamples\nAsset type example for a lighting fixture asset type: LT3\nAsset type example for an air handling unit asset type: AHU10\nAsset type example for a distribution board asset type: DB7\nAsset type example for a lighting fixture asset type when there is only one type: LT\nAsset type example for an air handling unit asset type when there is only one type: AHU\nAsset type example for a distribution board asset type when there is only one type: DB\n\n\nValidation tests\nThe validation procedure shall include the following tests:\n\nRegular expression matching to validate the name format.\nUniqueness of the name across all asset types in the building.\n\n\nRegular expression matching\n[A-Z]{2,6}(?:[1-9][0-9]*)?\n\n\n\n\nDevice/Asset role name (asset.name)\n\nDefinition\nThe device or asset role name is a human-generated identifier that is unique to the building. It combines a standard abbreviation for device/asset types and a numerical ID that is unique to each specific device/asset.\n\n\nOriginator\nGenerated by the BIM operator, design team, project team or facilities team, depending on project stage.\n\n\nFormat\n&lt;X&gt;-&lt;Y&gt;\nor\n&lt;XZ&gt;-&lt;Y&gt;\nwhere:\nX=  (alphabetic characters only, variable length, between 2 and 6 characters)\nY=  (variable length, unique integer numbers by building, non zero padded)\nZ=  (variable length, unique integer numbers by asset type in each building, non zero padded)\nThe use of the Z field is optional, only in case there is a need to include asset.type definitions.\nThe type abbreviation shall be according to the Building Device and Asset Abbreviation Registry.\nThe format is composed of a 2 to 6 uppercase alphabetical characters long type abbreviation according to the name abbreviation (X) and a variable length character numeric sequence that is unique to the building (Y). No leading zeros are allowed in the building unique incremental number to avoid ambiguity.\nOnly uppercase alphabetic characters and numeric characters are allowed, according to the regular expression below. The separator character between the type abbreviation and incremental number is a hyphen (-).\nFor practical reasons, at the discretion of the user and as long as there are no name clashes between devices in the same building, the digits forming the second part of the device role name can be assigned following spatial or discipline specific scoping methods. For instance, the lighting fixtures on zone 1 of level 3 of a 20 storey building can all share the same first part of the name LT-103#### and the subsequent integer numbers can be attributed incrementally.\n\n\nExamples\nName example for a lighting fixture: LT-15\nName example for an air handling unit: AHU-3\nName example for a distribution board: DB-2\nName example for a lighting fixture including an asset type: LT3-375\nName example for an air handling unit including an asset type: AHU10-46\nName example for a distribution board including an asset type: DB3-21\n\n\nValidation tests\nThe validation procedure shall include the following tests:\n\nRegular expression matching to validate the name format.\nUniqueness of the name across all devices in the building.\n\n\nRegular expression matching\n[A-Z]{2,6}(?:[1-9][0-9]*)?-[1-9][0-9]*"
  },
  {
    "objectID": "BDNS_Specification_naming_syntax.html#physical-deviceasset-labels",
    "href": "BDNS_Specification_naming_syntax.html#physical-deviceasset-labels",
    "title": "Building Device and Asset Naming Standards initiative",
    "section": "Physical device/asset labels",
    "text": "Physical device/asset labels\nPhysical device/asset labels shall contain the following items:\n\nA human readable label with the device/asset name.\nA machine readable label with encoded identification in at least one of the following two formats:\n\nQuick response (QR) code\nNear field communication (NFC) tag\n\n\nQR codes and NFC tags are intended for use cases facilitating the maintenance of equipment and for providing a code or a web based user interface to a physical object.\n\n\nPhysical device human readable label\n\nDefinition\nThe human readable label shall be based on the device/asset role name (asset.name) as indicated above.\nFor quick interpretation and conciseness, the recommendation is to keep the label to a minimum.\nOptionally, the human-readable label could be augmented by:\n\nA prefix, indicating the building identification to guarantee global uniqueness beyond the building.\nA suffix, where concise arbitrary notation can be added to facilitate identification of device properties.\n\n\n\nOriginator\nSystem integrator, master system integrator or 3rd party subcontractor, using information from manufacturer, BIM and/or asset tag registry.\n\n\nFormat\n\nOptional label prefix\n&lt;COUNTRY&gt;-&lt;CITY&gt;-&lt;BUILDING&gt;\nwhere:\n&lt;COUNTRY&gt;-&lt;CITY&gt;-&lt;BUILDING&gt; = assigned location code for building, composed of:\n&lt;COUNTRY&gt; = ISO Alpha-2 Country Code\n&lt;CITY&gt; = UN LOCODE City Code\n&lt;BUILDING&gt; = the project specific abbreviation for the building\nThe location code identification guarantees global uniqueness.\nThe name deliberately omits information like floor, area or connection that can change in it. The optional suffix in the physical label can however contain additional information such as floor level if useful for the specific use case.\n\n\n\nCompulsory device/asset label name (same as asset.name)\n&lt;X&gt;-&lt;Y&gt;\n\nOptional label suffix\n_&lt;text&gt;\nwhere\ntext = a free text alphanumeric sequence without underscores and without white spaces that adds useful information to the label that can be immediately seen. Text can be hyphenated (-) to represent floor information, room information, distribution board or related equipment.\nThe suffix in the physical label (not in device.name) allows practical use of the labels to maintenance technicians and facility managers to avoid disrupting traditional workflows. With time, apps and automation, the suffix is likely to disappear.\n\n\n\nExamples\nCompulsory short format name label\nTSTAT-1\nPrefix format label\nUK-LON-BLD1_TSTAT-1\nSuffix format label example (optional for capturing existing tagging information)\nTSTAT-1_RH-2-3-25-CO2\nTSTAT-2_EF\n\n\n\n\nPhysical device/asset machine readable identification\n\nDefinition\nThe machine readable label is a physical adhesive label that encodes identification and naming to enable automation for identification, provisioning, commissioning and maintenance of devices throughout their lifecycle, from initial configuration and installation to operation and decommissioning.\n\n\nReference standards\nISO/IEC 18004:2015\nISO/IEC 13157-1:2010\nISO/IEC 18000-3:2010\nISO/IEC 18092:2013\n\n\nOriginator\nMaster system integrator or 3rd party subcontractor, using information from the contractor’s BIM workflow, asset tag registry and device manufacturers.\n\n\nPhysical format\nThe QR code shall be created according to ISO/IEC 18004:2015. The QR code payload shall be minified to reduce the number of characters and shall include the following information.\n\nModel format (encoding) example for BIM models\n{\n  \"asset\": {\n    \"guid\": \"ifc://04aEp5ymD_$u5IxhJN2aGi\",\n    \"site\": \"GB-LON-BLD1\",\n    \"name\": \"AHU-1\"\n  }\n}\n\n\nMinified model format (encoding) example\n{\"asset\":{\"guid\":\"ifc://04aEp5ymD_$u5IxhJN2aGi\",\"site\":\"GB-LON-BLD1\",\"name\":\"AHU-1\"}}\n\n\nModel format (encoding) when no BIM ID is available\n\nMachine generated using uuidgen\n{\n  \"asset\": {\n    \"guid\": \"uuid://d3501378-dd50-47c5-ae26-806726e1b749\",\n    \"site\": \"GB-LON-BLD1\",\n    \"name\": \"AHU-1\"\n  }\n}\n\n\nLinked to the device name indicated in the drawings\n{\n  \"asset\": {\n    \"guid\": \"drw://AHU001\",\n    \"site\": \"GB-LON-BLD1\",\n    \"name\": \"AHU-1\"\n  }\n}\n\n\n\n\n\nNotes\nIf necessary, it would be easy to do a simple 1:1 mapping for _ ⇔ / and $ ⇔ + if necessary for other parts of the system that may treat $ or _ as reserved characters."
  },
  {
    "objectID": "BDNS_Specification_naming_syntax.html#footnotes",
    "href": "BDNS_Specification_naming_syntax.html#footnotes",
    "title": "Building Device and Asset Naming Standards initiative",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nNote that the IFC standard is slightly different than the web-standard base64 encoding, specifically using _ and $ instead of / and +.↩︎"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "BDNS",
    "section": "",
    "text": "Status: release 2.1.0-rc1\nThis repository holds resources for an initiative to improve interoperability in building management, by focusing on standardising naming of building devices and assets.\nAchieving a common standard across building devices’ naming is an important first step towards being able to efficiently collect, analyse and capture data insights from buildings, and thus optimise building performance to reduce the operational cost and environmental impact of managing buildings.\nLonger-term, this sets the groundwork for real industry collaboration - with the potential to create industry-wide benchmarking, and to facilitate trading of buildings between portfolios.\nA naming and labelling standard (complementing other industry initiatives ) will simplify and drive consistency, thus increasing value by unlocking the application of technologies such as machine learning.\nThe work of this community group aligns with and complements other initiatives in the industry such as:\n\nIFC\nUniclass and Uniclass2\nOmniclass\nCIBSE Symbols\nUDMI\nWeb of Things\nHyperCat\nProject Haystack\nBrick Schema\nDigital Buildings Ontology\n\nIn scope for this work are: - A specification for naming syntax - A register of building device type abbreviations\nThe register of building device type abbreviations includes the following columns:\n\nasset_description - a desription of what is named; the description typically includes a category when the level of granularity of the abbreviation is more specific\nasset_abbreviation - the BDNS abbreviation itself\ncan_be_connected - a boolean value that distinguishes between assets that do not include any means of network connectivity and connectable devices\ndbo_entity_type - the Digital Buildings Ontology namespace and entity type that can be associated to the BDNS abbreviation; NOTE: while BDNS presupposes that modelers will apply abbreviations consistently based on similar domain expertise, DBO does not; instead, it provides definitions for devices which may have overlapping function or where terms are ambiguous. For example, while a BDNS user may find the distinction between AHU, ACU, and RTU to be meaningful, DBO does consider all of these as classes of AHU (and provides a definition for what an AHU is.\nifc_class - the IFC class that can be associated to the BDNS abbreviation\nifc_type - the specific IFC type associated to the IFC class that can be associated to the BDNS abbreviation\n\nThe comparison columns have the purpose of providing a simple means to correlate the naming of instances with ontology objects that are present in different building services and systems related ontologies, like the Digital Buildings Ontology and IFC.\n\n\nThe device and asset names defined in this standard are meant to be used in the following applications:\n\nnaming of CAD object instances in drawings\nnaming of object instances in BIM models\nnaming of control devices in control software (for instance BACnet device names)\nnaming of assets in asset management systems\nnaming of devices in IoT ingestion systems\nnaming of devices and assets in databases\nnaming of devices and assets in MQTT topics\n\n\n\n\n\nCurrently we only serve the latest version of the BDNS built website and pdf documents.\nThe source markdown files of previous versions can be reviewed by referring to the appropriate Github tag/release.\n\ne.g. BDNS=1.2.0 = https://github.com/theodi/BDNS/tree/1.2.0 for the source files of v1.2.0\ne.g. BDNS_Specification_naming_syntax=1.2.0 = https://github.com/theodi/BDNS/blob/1.2.0/BDNS_Specification_naming_syntax.md for a specific version of a document\n\nThe BDNS_Abbreviations_Register.csv data file can also be retrieved directly from a previous tag/release if you are required to pin to a given version.\n\ne.g. BDNS_Abbreviations_Register.csv=1.2.0 = https://raw.githubusercontent.com/theodi/BDNS/1.2.0/BDNS_Abbreviations_Register.csv\n\n\n\n\n\nThe standard is primarily focusing on naming of building control devices, but with its growing usage it also includes a number of maintainable asset names and types."
  },
  {
    "objectID": "index.html#use",
    "href": "index.html#use",
    "title": "BDNS",
    "section": "",
    "text": "The device and asset names defined in this standard are meant to be used in the following applications:\n\nnaming of CAD object instances in drawings\nnaming of object instances in BIM models\nnaming of control devices in control software (for instance BACnet device names)\nnaming of assets in asset management systems\nnaming of devices in IoT ingestion systems\nnaming of devices and assets in databases\nnaming of devices and assets in MQTT topics"
  },
  {
    "objectID": "index.html#past-versions",
    "href": "index.html#past-versions",
    "title": "BDNS",
    "section": "",
    "text": "Currently we only serve the latest version of the BDNS built website and pdf documents.\nThe source markdown files of previous versions can be reviewed by referring to the appropriate Github tag/release.\n\ne.g. BDNS=1.2.0 = https://github.com/theodi/BDNS/tree/1.2.0 for the source files of v1.2.0\ne.g. BDNS_Specification_naming_syntax=1.2.0 = https://github.com/theodi/BDNS/blob/1.2.0/BDNS_Specification_naming_syntax.md for a specific version of a document\n\nThe BDNS_Abbreviations_Register.csv data file can also be retrieved directly from a previous tag/release if you are required to pin to a given version.\n\ne.g. BDNS_Abbreviations_Register.csv=1.2.0 = https://raw.githubusercontent.com/theodi/BDNS/1.2.0/BDNS_Abbreviations_Register.csv"
  },
  {
    "objectID": "index.html#note",
    "href": "index.html#note",
    "title": "BDNS",
    "section": "",
    "text": "The standard is primarily focusing on naming of building control devices, but with its growing usage it also includes a number of maintainable asset names and types."
  },
  {
    "objectID": "BDNS_Scoping_guidelines_and_principles.html",
    "href": "BDNS_Scoping_guidelines_and_principles.html",
    "title": "Building Device and Asset Naming Standards initiative",
    "section": "",
    "text": "Status: release 2.1.0-rc1"
  },
  {
    "objectID": "BDNS_Scoping_guidelines_and_principles.html#context-and-background",
    "href": "BDNS_Scoping_guidelines_and_principles.html#context-and-background",
    "title": "Building Device and Asset Naming Standards initiative",
    "section": "Context and background",
    "text": "Context and background\nBuilding data is currently structured in many different ways, with no single standard. Although several attempts have been made to introduce a universal standard, these have not been universally adopted, and have often found to be insufficiently detailed to allow automated acquisition and surfacing of data from device (both input and outputs), into a structured database for use in end user and building operator applications.\nThe lack of standardised naming and labelling for building devices from design to operation means we are failing to leverage the value of data to allow interoperability, improve building efficiency/operations and increase occupant productivity and happiness.\nA naming and labelling standard (complementing other industry initiatives) will simplify and drive consistency, thus increasing value by unlocking the application of technologies such as machine learning."
  },
  {
    "objectID": "BDNS_Scoping_guidelines_and_principles.html#purpose",
    "href": "BDNS_Scoping_guidelines_and_principles.html#purpose",
    "title": "Building Device and Asset Naming Standards initiative",
    "section": "Purpose",
    "text": "Purpose\nThis project intends to provide an industry wide naming convention framework for Information Technology (IT), Mechanical, Electrical and Public Health (MEP), and other Operational Technology (OT) devices and assets within buildings.\nWe believe that sharing data in an open and secure way would be a significant benefit for the industry, and is an important first step in being able to normalise data interactions in the future.\nBeing able to efficiently collect, analyse and leverage data insights from buildings is a catalyst for optimising building performance, improving the use of resources and moving towards predictive maintenance and buildings that can respond to the climate emergency.\nThere is a number of initiatives around naming and tagging already in the industry, namely:\n\nIFC (building information modelling)\nUniclass and Uniclass2 (asset management)\nOmniclass (asset management)\nCIBSE Symbols\nUDMI (IoT device communication encoding)\nWeb of Things (IoT device communication encoding)\nHyperCat (IoT device communication encoding)\nProject Haystack (tagging and linked data for control system)\nBrick Schema (linked data for control systems)\nDigital Buildings Ontology\n\nThe intent is not to replace these standards or create an overarching umbrella standard on top of existing initiatives, but to create a convention that is complementary and can address the correct naming of control system devices and associated maintainable assets (within the framework) from the early design stages through to operation, while ensuring relevance and suitability to all design and operational building stakeholders."
  },
  {
    "objectID": "BDNS_Scoping_guidelines_and_principles.html#scope",
    "href": "BDNS_Scoping_guidelines_and_principles.html#scope",
    "title": "Building Device and Asset Naming Standards initiative",
    "section": "Scope",
    "text": "Scope\nThe scope of this project is very focused: to provide an open naming convention and associated specifications for the naming of building control devices and associated items (within the defined framework) within buildings.\nFor the purpose of this standard, the definition of building control devices is any equipment that can change state and is monitored within a building.\nExample of controls devices are:\n\ntemperature sensors,\nfan coil units,\nVAV boxes,\npumps,\nluminaires.\n\nAssociated items are:\n\nmanual devices that require maintenance or are used to setup a system - e.g. commissioning sets, regulating valves etc.\narchitectural elements that may have a building control device associated with it - e.g. a door or a window.\n\nThe naming standard is applicable to fixed equipment only. Mobile equipment such as desk modules and portable sensors are not considered devices in the context of this project and therefore the naming convention is not applicable.\nComponents that are part of a device, such as fan coil unit valves and controllers are not considered to be standalone devices, and therefore do not need individual names. Their data points can however be described and named using complementary standards such as Project Haystack, Brick Schema and the Digital Buildings Ontology."
  },
  {
    "objectID": "BDNS_Scoping_guidelines_and_principles.html#deliverables",
    "href": "BDNS_Scoping_guidelines_and_principles.html#deliverables",
    "title": "Building Device and Asset Naming Standards initiative",
    "section": "Deliverables",
    "text": "Deliverables\nThe following documents have been developed as part of the scope:\n\nA specification for the naming syntax\nA register of building device and asset type abbreviations\nA governance model for the initiative"
  },
  {
    "objectID": "BDNS_Scoping_guidelines_and_principles.html#principles",
    "href": "BDNS_Scoping_guidelines_and_principles.html#principles",
    "title": "Building Device and Asset Naming Standards initiative",
    "section": "Principles",
    "text": "Principles\nThe guiding principles for the standard are the following:\n\nGranularity should be guided by defining the level of experience of people that have to apply naming.\nGranularity should avoid ambiguity, introduce context and be what most people in industry would do.\nThe device identity and naming must remain consistent across the lifecycle of the device, throughout the design, construction and operational phases in order to enable seamless data transfer across phases.\n\nOur recommendation is to store data in shared repositories and not standalone systems, and follow three key principles in data exchange:\n\nUtilisation of open standards\nConsistency of device identity across phases\nTransfer of design parameters from design model to operational models"
  },
  {
    "objectID": "BDNS_Scoping_guidelines_and_principles.html#process",
    "href": "BDNS_Scoping_guidelines_and_principles.html#process",
    "title": "Building Device and Asset Naming Standards initiative",
    "section": "Process",
    "text": "Process\nThe proposed governance principles and change process are documented in the Building Device and Asset Naming Standard Proposed Governance document. The document includes information on the open licensing of the work being driven by this initiative, communication mechanisms and a process for consensus building.\nIn practice, the proposed change process will rely on the GitHub platform:\n\nChanges to the syntax can be proposed by submitting an issue on the Github platform. Issues will be discussed and resolved on GitHub, and may be discussed additionally through the other communication mechanisms of the group, including mailing-list and semi-regular teleconferences.\nAdditions to the register can be proposed by submitting a pull request (PR) to the Github repository. Alternative submission mechanisms (e.g. through a mail address) may be made available if the Github PR mechanisms are deemed too technical."
  },
  {
    "objectID": "BDNS_Scoping_guidelines_and_principles.html#future-work",
    "href": "BDNS_Scoping_guidelines_and_principles.html#future-work",
    "title": "Building Device and Asset Naming Standards initiative",
    "section": "Future work",
    "text": "Future work\nThe intention is for this work to develop further to cover standardisation of naming for maintainable assets, but to exclude the naming of metadata and data points, which are meant to be named with a complementary standard, as discussed above.\nFor the purpose of this standard, the definition of a control point is any data associated with a named building control device that one can read from or write to. Examples of control point:\n\nopen/close position for valve,\nlighting level.\n\nFor the purpose of this standard, the definition of metadata is data associated with an asset that provide information about its attributes. Examples of metadata:\n\nmanufacturer label,\ndevice model label,\nmemory capacity."
  }
]